package formPiani.portlet;

import formPiani.constants.FormPianiPortletKeys;
import servicebuilder.model.AttiDiAdesione;
import servicebuilder.model.PianiFabbisogni;
import servicebuilder.service.AttiDiAdesioneLocalService;
import servicebuilder.service.PianiFabbisogniLocalService;

import com.liferay.counter.kernel.service.CounterLocalServiceUtil;
import com.liferay.portal.kernel.log.Log;
import com.liferay.portal.kernel.log.LogFactoryUtil;
import com.liferay.portal.kernel.portlet.bridges.mvc.MVCPortlet;
import com.liferay.portal.kernel.util.ParamUtil;

import java.text.SimpleDateFormat;

import javax.portlet.ActionRequest;
import javax.portlet.ActionResponse;
import javax.portlet.Portlet;
import javax.portlet.ProcessAction;

import org.osgi.service.component.annotations.Component;
import org.osgi.service.component.annotations.Reference;

import formAtti.portlet.FormAttiPortlet;

/**
 * @author A.Stoian
 */
@Component(
	immediate = true,
	property = {
		"com.liferay.portlet.display-category=category.sample",
		"com.liferay.portlet.header-portlet-css=/css/main.css",
		"com.liferay.portlet.instanceable=true",
		"javax.portlet.display-name=FormPiani",
		"javax.portlet.init-param.template-path=/",
		"javax.portlet.init-param.view-template=/view.jsp",
		"javax.portlet.name=" + FormPianiPortletKeys.FORMPIANI,
		"javax.portlet.resource-bundle=content.Language",
		"javax.portlet.security-role-ref=power-user,user"
	},
	service = Portlet.class
)
public class FormPianiPortlet extends MVCPortlet {
	
	private static final Log _log = LogFactoryUtil.getLog(FormPianiPortlet.class);

    @ProcessAction(name = "submitForm")
 
    public void submitForm(ActionRequest actionRequest, ActionResponse actionResponse) throws java.text.ParseException {
    	
    	String codicePianoFabbisogni = ParamUtil.getString(actionRequest, "codicePianoFabbisogni");
 
        long codiceAtto = ParamUtil.getLong(actionRequest, "codiceAtto");
 
        String descrizione = ParamUtil.getString(actionRequest, "descrizione");
        
        String stato = ParamUtil.getString(actionRequest, "stato");
 
        String dataStato = ParamUtil.getString(actionRequest, "dataStato");
 
        String dataInizioFabbisogni = ParamUtil.getString(actionRequest, "dataInizioFabbisogni");
        
        String dataFineFabbisogni = ParamUtil.getString(actionRequest, "dataFineFabbisogni");
 
   

        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");

        long idPianiFabbisogni = CounterLocalServiceUtil.increment(PianiFabbisogni.class.getName());

        PianiFabbisogni pianiFabbisogni = _pianiFabbisogniLocalService.createPianiFabbisogni(idPianiFabbisogni);

    	pianiFabbisogni.setCodicePianoFabbisogno(codicePianoFabbisogni);
    	
    	pianiFabbisogni.setFK_attiDiAdesione(codiceAtto);

    	pianiFabbisogni.setDescrizione(descrizione);
    	
    	pianiFabbisogni.setStato(stato);

    	pianiFabbisogni.setDataStato(sdf.parse(dataStato));
    	
    	pianiFabbisogni.setDataInizioFabbisogni(sdf.parse(dataInizioFabbisogni));
    	
    	pianiFabbisogni.setDataFineFabbisogni(sdf.parse(dataFineFabbisogni));

    	_pianiFabbisogniLocalService.updatePianiFabbisogni(pianiFabbisogni);

    	_log.info("pianiFabbisogni: "+ pianiFabbisogni);

    }

    @Reference
    PianiFabbisogniLocalService _pianiFabbisogniLocalService;
	
}