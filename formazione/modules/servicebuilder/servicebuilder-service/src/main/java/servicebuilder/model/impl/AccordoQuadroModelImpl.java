/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package servicebuilder.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

import servicebuilder.model.AccordoQuadro;
import servicebuilder.model.AccordoQuadroModel;

/**
 * The base model implementation for the AccordoQuadro service. Represents a row in the &quot;AQ_AccordoQuadro&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>AccordoQuadroModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link AccordoQuadroImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see AccordoQuadroImpl
 * @generated
 */
public class AccordoQuadroModelImpl
	extends BaseModelImpl<AccordoQuadro> implements AccordoQuadroModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a accordo quadro model instance should use the <code>AccordoQuadro</code> interface instead.
	 */
	public static final String TABLE_NAME = "AQ_AccordoQuadro";

	public static final Object[][] TABLE_COLUMNS = {
		{"Id_AccordoQuadro", Types.BIGINT}, {"CodiceAccordo", Types.VARCHAR},
		{"FK_documenti", Types.BIGINT}, {"Descrizione", Types.VARCHAR},
		{"DataInizioValidita", Types.TIMESTAMP},
		{"DataFineValidita", Types.TIMESTAMP},
		{"ImportoComplessivo", Types.DOUBLE}, {"userIns", Types.VARCHAR},
		{"userAgg", Types.VARCHAR}, {"dataIns", Types.TIMESTAMP},
		{"dataAgg", Types.TIMESTAMP}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("Id_AccordoQuadro", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("CodiceAccordo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("FK_documenti", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("Descrizione", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("DataInizioValidita", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("DataFineValidita", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("ImportoComplessivo", Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("userIns", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("userAgg", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("dataIns", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("dataAgg", Types.TIMESTAMP);
	}

	public static final String TABLE_SQL_CREATE =
		"create table AQ_AccordoQuadro (Id_AccordoQuadro LONG not null primary key,CodiceAccordo VARCHAR(75) null,FK_documenti LONG,Descrizione VARCHAR(75) null,DataInizioValidita DATE null,DataFineValidita DATE null,ImportoComplessivo DOUBLE,userIns VARCHAR(75) null,userAgg VARCHAR(75) null,dataIns DATE null,dataAgg DATE null)";

	public static final String TABLE_SQL_DROP = "drop table AQ_AccordoQuadro";

	public static final String ORDER_BY_JPQL =
		" ORDER BY accordoQuadro.Id_AccordoQuadro ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY AQ_AccordoQuadro.Id_AccordoQuadro ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long ID_ACCORDOQUADRO_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public AccordoQuadroModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _Id_AccordoQuadro;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId_AccordoQuadro(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _Id_AccordoQuadro;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return AccordoQuadro.class;
	}

	@Override
	public String getModelClassName() {
		return AccordoQuadro.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<AccordoQuadro, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		for (Map.Entry<String, Function<AccordoQuadro, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<AccordoQuadro, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((AccordoQuadro)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<AccordoQuadro, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<AccordoQuadro, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(AccordoQuadro)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<AccordoQuadro, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<AccordoQuadro, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static final Map<String, Function<AccordoQuadro, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<AccordoQuadro, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<AccordoQuadro, Object>> attributeGetterFunctions =
			new LinkedHashMap<String, Function<AccordoQuadro, Object>>();
		Map<String, BiConsumer<AccordoQuadro, ?>> attributeSetterBiConsumers =
			new LinkedHashMap<String, BiConsumer<AccordoQuadro, ?>>();

		attributeGetterFunctions.put(
			"Id_AccordoQuadro", AccordoQuadro::getId_AccordoQuadro);
		attributeSetterBiConsumers.put(
			"Id_AccordoQuadro",
			(BiConsumer<AccordoQuadro, Long>)
				AccordoQuadro::setId_AccordoQuadro);
		attributeGetterFunctions.put(
			"CodiceAccordo", AccordoQuadro::getCodiceAccordo);
		attributeSetterBiConsumers.put(
			"CodiceAccordo",
			(BiConsumer<AccordoQuadro, String>)AccordoQuadro::setCodiceAccordo);
		attributeGetterFunctions.put(
			"FK_documenti", AccordoQuadro::getFK_documenti);
		attributeSetterBiConsumers.put(
			"FK_documenti",
			(BiConsumer<AccordoQuadro, Long>)AccordoQuadro::setFK_documenti);
		attributeGetterFunctions.put(
			"Descrizione", AccordoQuadro::getDescrizione);
		attributeSetterBiConsumers.put(
			"Descrizione",
			(BiConsumer<AccordoQuadro, String>)AccordoQuadro::setDescrizione);
		attributeGetterFunctions.put(
			"DataInizioValidita", AccordoQuadro::getDataInizioValidita);
		attributeSetterBiConsumers.put(
			"DataInizioValidita",
			(BiConsumer<AccordoQuadro, Date>)
				AccordoQuadro::setDataInizioValidita);
		attributeGetterFunctions.put(
			"DataFineValidita", AccordoQuadro::getDataFineValidita);
		attributeSetterBiConsumers.put(
			"DataFineValidita",
			(BiConsumer<AccordoQuadro, Date>)
				AccordoQuadro::setDataFineValidita);
		attributeGetterFunctions.put(
			"ImportoComplessivo", AccordoQuadro::getImportoComplessivo);
		attributeSetterBiConsumers.put(
			"ImportoComplessivo",
			(BiConsumer<AccordoQuadro, Double>)
				AccordoQuadro::setImportoComplessivo);
		attributeGetterFunctions.put("userIns", AccordoQuadro::getUserIns);
		attributeSetterBiConsumers.put(
			"userIns",
			(BiConsumer<AccordoQuadro, String>)AccordoQuadro::setUserIns);
		attributeGetterFunctions.put("userAgg", AccordoQuadro::getUserAgg);
		attributeSetterBiConsumers.put(
			"userAgg",
			(BiConsumer<AccordoQuadro, String>)AccordoQuadro::setUserAgg);
		attributeGetterFunctions.put("dataIns", AccordoQuadro::getDataIns);
		attributeSetterBiConsumers.put(
			"dataIns",
			(BiConsumer<AccordoQuadro, Date>)AccordoQuadro::setDataIns);
		attributeGetterFunctions.put("dataAgg", AccordoQuadro::getDataAgg);
		attributeSetterBiConsumers.put(
			"dataAgg",
			(BiConsumer<AccordoQuadro, Date>)AccordoQuadro::setDataAgg);

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@Override
	public long getId_AccordoQuadro() {
		return _Id_AccordoQuadro;
	}

	@Override
	public void setId_AccordoQuadro(long Id_AccordoQuadro) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_Id_AccordoQuadro = Id_AccordoQuadro;
	}

	@Override
	public String getCodiceAccordo() {
		if (_CodiceAccordo == null) {
			return "";
		}
		else {
			return _CodiceAccordo;
		}
	}

	@Override
	public void setCodiceAccordo(String CodiceAccordo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_CodiceAccordo = CodiceAccordo;
	}

	@Override
	public long getFK_documenti() {
		return _FK_documenti;
	}

	@Override
	public void setFK_documenti(long FK_documenti) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_FK_documenti = FK_documenti;
	}

	@Override
	public String getDescrizione() {
		if (_Descrizione == null) {
			return "";
		}
		else {
			return _Descrizione;
		}
	}

	@Override
	public void setDescrizione(String Descrizione) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_Descrizione = Descrizione;
	}

	@Override
	public Date getDataInizioValidita() {
		return _DataInizioValidita;
	}

	@Override
	public void setDataInizioValidita(Date DataInizioValidita) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_DataInizioValidita = DataInizioValidita;
	}

	@Override
	public Date getDataFineValidita() {
		return _DataFineValidita;
	}

	@Override
	public void setDataFineValidita(Date DataFineValidita) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_DataFineValidita = DataFineValidita;
	}

	@Override
	public Double getImportoComplessivo() {
		return _ImportoComplessivo;
	}

	@Override
	public void setImportoComplessivo(Double ImportoComplessivo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ImportoComplessivo = ImportoComplessivo;
	}

	@Override
	public String getUserIns() {
		if (_userIns == null) {
			return "";
		}
		else {
			return _userIns;
		}
	}

	@Override
	public void setUserIns(String userIns) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userIns = userIns;
	}

	@Override
	public String getUserAgg() {
		if (_userAgg == null) {
			return "";
		}
		else {
			return _userAgg;
		}
	}

	@Override
	public void setUserAgg(String userAgg) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userAgg = userAgg;
	}

	@Override
	public Date getDataIns() {
		return _dataIns;
	}

	@Override
	public void setDataIns(Date dataIns) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_dataIns = dataIns;
	}

	@Override
	public Date getDataAgg() {
		return _dataAgg;
	}

	@Override
	public void setDataAgg(Date dataAgg) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_dataAgg = dataAgg;
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			0, AccordoQuadro.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public AccordoQuadro toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, AccordoQuadro>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		AccordoQuadroImpl accordoQuadroImpl = new AccordoQuadroImpl();

		accordoQuadroImpl.setId_AccordoQuadro(getId_AccordoQuadro());
		accordoQuadroImpl.setCodiceAccordo(getCodiceAccordo());
		accordoQuadroImpl.setFK_documenti(getFK_documenti());
		accordoQuadroImpl.setDescrizione(getDescrizione());
		accordoQuadroImpl.setDataInizioValidita(getDataInizioValidita());
		accordoQuadroImpl.setDataFineValidita(getDataFineValidita());
		accordoQuadroImpl.setImportoComplessivo(getImportoComplessivo());
		accordoQuadroImpl.setUserIns(getUserIns());
		accordoQuadroImpl.setUserAgg(getUserAgg());
		accordoQuadroImpl.setDataIns(getDataIns());
		accordoQuadroImpl.setDataAgg(getDataAgg());

		accordoQuadroImpl.resetOriginalValues();

		return accordoQuadroImpl;
	}

	@Override
	public AccordoQuadro cloneWithOriginalValues() {
		AccordoQuadroImpl accordoQuadroImpl = new AccordoQuadroImpl();

		accordoQuadroImpl.setId_AccordoQuadro(
			this.<Long>getColumnOriginalValue("Id_AccordoQuadro"));
		accordoQuadroImpl.setCodiceAccordo(
			this.<String>getColumnOriginalValue("CodiceAccordo"));
		accordoQuadroImpl.setFK_documenti(
			this.<Long>getColumnOriginalValue("FK_documenti"));
		accordoQuadroImpl.setDescrizione(
			this.<String>getColumnOriginalValue("Descrizione"));
		accordoQuadroImpl.setDataInizioValidita(
			this.<Date>getColumnOriginalValue("DataInizioValidita"));
		accordoQuadroImpl.setDataFineValidita(
			this.<Date>getColumnOriginalValue("DataFineValidita"));
		accordoQuadroImpl.setImportoComplessivo(
			this.<Double>getColumnOriginalValue("ImportoComplessivo"));
		accordoQuadroImpl.setUserIns(
			this.<String>getColumnOriginalValue("userIns"));
		accordoQuadroImpl.setUserAgg(
			this.<String>getColumnOriginalValue("userAgg"));
		accordoQuadroImpl.setDataIns(
			this.<Date>getColumnOriginalValue("dataIns"));
		accordoQuadroImpl.setDataAgg(
			this.<Date>getColumnOriginalValue("dataAgg"));

		return accordoQuadroImpl;
	}

	@Override
	public int compareTo(AccordoQuadro accordoQuadro) {
		long primaryKey = accordoQuadro.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof AccordoQuadro)) {
			return false;
		}

		AccordoQuadro accordoQuadro = (AccordoQuadro)object;

		long primaryKey = accordoQuadro.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<AccordoQuadro> toCacheModel() {
		AccordoQuadroCacheModel accordoQuadroCacheModel =
			new AccordoQuadroCacheModel();

		accordoQuadroCacheModel.Id_AccordoQuadro = getId_AccordoQuadro();

		accordoQuadroCacheModel.CodiceAccordo = getCodiceAccordo();

		String CodiceAccordo = accordoQuadroCacheModel.CodiceAccordo;

		if ((CodiceAccordo != null) && (CodiceAccordo.length() == 0)) {
			accordoQuadroCacheModel.CodiceAccordo = null;
		}

		accordoQuadroCacheModel.FK_documenti = getFK_documenti();

		accordoQuadroCacheModel.Descrizione = getDescrizione();

		String Descrizione = accordoQuadroCacheModel.Descrizione;

		if ((Descrizione != null) && (Descrizione.length() == 0)) {
			accordoQuadroCacheModel.Descrizione = null;
		}

		Date DataInizioValidita = getDataInizioValidita();

		if (DataInizioValidita != null) {
			accordoQuadroCacheModel.DataInizioValidita =
				DataInizioValidita.getTime();
		}
		else {
			accordoQuadroCacheModel.DataInizioValidita = Long.MIN_VALUE;
		}

		Date DataFineValidita = getDataFineValidita();

		if (DataFineValidita != null) {
			accordoQuadroCacheModel.DataFineValidita =
				DataFineValidita.getTime();
		}
		else {
			accordoQuadroCacheModel.DataFineValidita = Long.MIN_VALUE;
		}

		Double ImportoComplessivo = getImportoComplessivo();

		if (ImportoComplessivo != null) {
			accordoQuadroCacheModel.ImportoComplessivo = ImportoComplessivo;
		}

		accordoQuadroCacheModel.userIns = getUserIns();

		String userIns = accordoQuadroCacheModel.userIns;

		if ((userIns != null) && (userIns.length() == 0)) {
			accordoQuadroCacheModel.userIns = null;
		}

		accordoQuadroCacheModel.userAgg = getUserAgg();

		String userAgg = accordoQuadroCacheModel.userAgg;

		if ((userAgg != null) && (userAgg.length() == 0)) {
			accordoQuadroCacheModel.userAgg = null;
		}

		Date dataIns = getDataIns();

		if (dataIns != null) {
			accordoQuadroCacheModel.dataIns = dataIns.getTime();
		}
		else {
			accordoQuadroCacheModel.dataIns = Long.MIN_VALUE;
		}

		Date dataAgg = getDataAgg();

		if (dataAgg != null) {
			accordoQuadroCacheModel.dataAgg = dataAgg.getTime();
		}
		else {
			accordoQuadroCacheModel.dataAgg = Long.MIN_VALUE;
		}

		return accordoQuadroCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<AccordoQuadro, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<AccordoQuadro, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<AccordoQuadro, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply((AccordoQuadro)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<AccordoQuadro, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<AccordoQuadro, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<AccordoQuadro, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(attributeGetterFunction.apply((AccordoQuadro)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, AccordoQuadro>
			_escapedModelProxyProviderFunction =
				ProxyUtil.getProxyProviderFunction(
					AccordoQuadro.class, ModelWrapper.class);

	}

	private long _Id_AccordoQuadro;
	private String _CodiceAccordo;
	private long _FK_documenti;
	private String _Descrizione;
	private Date _DataInizioValidita;
	private Date _DataFineValidita;
	private Double _ImportoComplessivo;
	private String _userIns;
	private String _userAgg;
	private Date _dataIns;
	private Date _dataAgg;

	public <T> T getColumnValue(String columnName) {
		Function<AccordoQuadro, Object> function =
			_attributeGetterFunctions.get(columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((AccordoQuadro)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("Id_AccordoQuadro", _Id_AccordoQuadro);
		_columnOriginalValues.put("CodiceAccordo", _CodiceAccordo);
		_columnOriginalValues.put("FK_documenti", _FK_documenti);
		_columnOriginalValues.put("Descrizione", _Descrizione);
		_columnOriginalValues.put("DataInizioValidita", _DataInizioValidita);
		_columnOriginalValues.put("DataFineValidita", _DataFineValidita);
		_columnOriginalValues.put("ImportoComplessivo", _ImportoComplessivo);
		_columnOriginalValues.put("userIns", _userIns);
		_columnOriginalValues.put("userAgg", _userAgg);
		_columnOriginalValues.put("dataIns", _dataIns);
		_columnOriginalValues.put("dataAgg", _dataAgg);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("Id_AccordoQuadro", 1L);

		columnBitmasks.put("CodiceAccordo", 2L);

		columnBitmasks.put("FK_documenti", 4L);

		columnBitmasks.put("Descrizione", 8L);

		columnBitmasks.put("DataInizioValidita", 16L);

		columnBitmasks.put("DataFineValidita", 32L);

		columnBitmasks.put("ImportoComplessivo", 64L);

		columnBitmasks.put("userIns", 128L);

		columnBitmasks.put("userAgg", 256L);

		columnBitmasks.put("dataIns", 512L);

		columnBitmasks.put("dataAgg", 1024L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private AccordoQuadro _escapedModel;

}